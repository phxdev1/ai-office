name: Build and Deploy Office LoRA Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: phxdev1/ai-office

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Install RunPod CLI
      if: github.ref == 'refs/heads/main' && secrets.RUNPOD_API_KEY
      run: |
        pip install runpod

  deploy-to-runpod:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && secrets.RUNPOD_API_KEY
    
    strategy:
      matrix:
        character: [michael, dwight, creed, erin, toby]

    steps:
    - name: Install RunPod CLI
      run: pip install runpod

    - name: Deploy ${{ matrix.character }} to RunPod
      env:
        RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
      run: |
        runpod config $RUNPOD_API_KEY
        
        echo "üé≠ Deploying ${{ matrix.character }} with same image..."
        echo "üìç Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        
        # Create pod with custom command to set character
        POD_OUTPUT=$(echo 'y' | runpod pod create "${{ matrix.character }}-lora-auto" \
          --image "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" \
          --gpu-type "RTX A6000" \
          --gpu-count 1 \
          --support-public-ip true 2>&1)
        
        echo "Pod output: $POD_OUTPUT"
        
        POD_ID=$(echo "$POD_OUTPUT" | grep -oE '[a-zA-Z0-9]{8,}' | tail -1)
        
        if [[ -n "$POD_ID" && "$POD_ID" != "Launching" ]]; then
          echo "‚úÖ ${{ matrix.character }} deployed: $POD_ID"
          echo "üîß Need to set CHARACTER_NAME=${{ matrix.character }} via RunPod UI"
        else
          echo "‚ùå Failed to deploy ${{ matrix.character }}"
          exit 1
        fi